CS 257 Software Design

Essy, Raquel, Rui, 23 April 2025


Jeff's example format (please don't delete yet):

REQUEST: /authors

GET parameters
    search_text (Optional, default: '') -- return only authors whose
        first or last names contain search_text, case-insensitively

    start_year (Optional, default: -infinity) -- return only authors who
        were born no earlier than start_year
    
    end_year (Optional, default: infinity) -- return only authors who died
        no later than end_year

RESPONSE: a JSON list of dictionaries, each of which represents one
author, sorted alphabetically by last name (and sorted alphabetically
by first name when last names are equal). Each dictionary in this
list will have the following fields.

   last_name -- (TEXT) the author's last or family name
   first_name -- (TEXT) the author's first or given name or names
   birth_year -- (INTEGER) the year the author was born
   death_year -- (INTEGER) the year the author died (or 'NULL' if still alive)

EXAMPLE:
    /authors?search_text=bront&start_year=1817

       [{"last_name":"Brontë", "first_name":"Ann", "birth_year":1820, "death_year":1849},
        {"last_name":"Brontë", "first_name":"Emily", "birth_year":1818, "death_year":1848}]
       
       (no Charlotte, since she was born in 1816)